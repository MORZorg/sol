#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
label{chp:gen}
\end_layout

\end_inset

Code generation
\end_layout

\begin_layout Standard
Starting from the tree generated by the syntactic analysis and the table
 produced by the semantical one, the 
\emph on
yygen 
\emph default
(again, written by us) function proceeds to the code generation.
 The function operates calling the recursive function 
\emph on
generate_code
\emph default
,
\emph on
 
\emph default
which proceeds starting from the root node and generating the code for all
 nodes from the tree's leftmost to the rightmost.
\end_layout

\begin_layout Standard
Since the function 
\emph on
yygen
\emph default
 operates on the product of the analysis steps, it doesn't check anything
 (if something was wrong, the compiler's execution would have been already
 stopped).
\end_layout

\begin_layout Section
S-code specification
\end_layout

\begin_layout Standard
The code generation translates the SOL code in S-code code.
 S-code is a very low level language not dissimilar from Assembly.
\end_layout

\begin_layout Standard
Everything is done on a global stack.
 Every instruction has zero to three operands and operates implicitly on
 the last values present on the stack (generally the last one or two).
 For example, the instruction to perform a sum of integer is called 
\emph on
IPLUS 
\emph default
and it has no operands.
 What it does is take the last two values present on the stack, sum them
 and put the result back on the stack.
 Obviously, every value used is also consumed.
\end_layout

\begin_layout Standard
Being so easy, it is not difficult to generate the appropriate sequence
 of instructions for every instruction available in SOL.
\end_layout

\begin_layout Standard
// TODO include S-code generation or write 
\begin_inset Quotes eld
\end_inset

see Lamperti's stuff
\begin_inset Quotes erd
\end_inset

?
\end_layout

\begin_layout Section
The yygen function
\end_layout

\begin_layout Standard
When the 
\emph on
yygen 
\emph default
function is called, it automatically retrieves the root of the Syntax Tree
 and passes it to 
\emph on
generate_code
\emph default
.
 This function consists of a big switch of the node's type and, for every
 type, it generates an instance of 
\emph on
Code
\emph default
 (a structure pointing to a list of pointers to another structure 
\emph on
Stat
\emph default
, which in turn contains the actual code) in different ways depending on
 the type.
 If the type of the node is 
\emph on
unqualified nonterminal
\emph default
, there is another big switch on the node's 
\emph on
n_val 
\emph default
(that is, the node's value determining the exact type of nonterminal represented
).
\end_layout

\begin_layout Standard
The 
\emph on
generate_code 
\emph default
function returns the code which is concatenated following the order of recursion
 and, in the end, yygen gets the full code.
\end_layout

\begin_layout Standard
// TODO amplify
\end_layout

\begin_layout Subsection
Function problem
\end_layout

\end_body
\end_document
